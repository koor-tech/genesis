version: '3.8'

services:
  api:
    image: koor-tech/genesis
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      store:
        condition: service_healthy
    volumes:
      - ./config.yaml:/home/koor/config.yaml
      - clients:/koor/clients

  worker:
    image: koor-tech/genesis
    build:
      dockerfile: Dockerfile
      context: .
    entrypoint: ./genesis monitor
    depends_on:
      rabbitmq:
        condition: service_healthy
      store:
        condition: service_healthy
    volumes:
      - ./config.yaml:/home/koor/config.yaml
      - clients:/koor/clients

  migrate:
    image: koor-tech/genesis
    build:
      dockerfile: Dockerfile
      context: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      store:
        condition: service_healthy
    entrypoint: ./genesis migrate up
    volumes:
      - ./config.yaml:/home/koor/config.yaml
      - clients:/koor/clients

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  store:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=koor-genesis
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d koor-genesis'" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "5433:5432"

volumes:
  rabbitmq-data:
  postgres-data:
  clients:
